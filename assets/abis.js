// source:
// https://github.com/unlock-protocol/unlock/blob/master/unlock-js/src/abis.js

const abis = {
  PublicLock: {
    contractName: 'PublicLock',
    abi: [
      'event Approval (address indexed owner,address indexed approved,uint256 indexed tokenId)',
      'event ApprovalForAll (address indexed owner,address indexed operator,bool approved)',
      'event CancelKey (uint256 indexed tokenId,address indexed owner,address indexed sendTo,uint256 refund)',
      'event Disable ()',
      'event ExpirationChanged (uint256 indexed _tokenId,uint256 _amount,bool _timeAdded)',
      'event ExpireKey (uint256 indexed tokenId)',
      'event KeyGranterAdded (address indexed account)',
      'event KeyGranterRemoved (address indexed account)',
      'event KeyManagerChanged (uint256 indexed _tokenId,address indexed _newManager)',
      'event LockManagerAdded (address indexed account)',
      'event LockManagerRemoved (address indexed account)',
      'event NewLockSymbol (string symbol)',
      'event NonceChanged (address indexed keyManager,uint256 nextAvailableNonce)',
      'event PricingChanged (uint256 oldKeyPrice,uint256 keyPrice,address oldTokenAddress,address tokenAddress)',
      'event RefundPenaltyChanged (uint256 freeTrialLength,uint256 refundPenaltyBasisPoints)',
      'event RenewKeyPurchase (address indexed owner,uint256 newExpiration)',
      'event Transfer (address indexed from,address indexed to,uint256 indexed tokenId)',
      'event TransferFeeChanged (uint256 transferFeeBasisPoints)',
      'event Withdrawal (address indexed sender,address indexed tokenAddress,address indexed beneficiary,uint256 amount)',
      'function addKeyGranter(address account)',
      'function addLockManager(address account)',
      'function approve(address _approved,uint256 _tokenId)',
      'function approveBeneficiary(address _spender,uint256 _amount) returns (bool)',
      'function balanceOf(address _keyOwner) constant view returns (uint256)',
      'function beneficiary() constant view returns (address)',
      'function cancelAndRefund(uint256 _tokenId)',
      'function cancelAndRefundFor(address _keyManager,uint8 _v,bytes32 _r,bytes32 _s,uint256 _tokenId)',
      'function disableLock()',
      'function expirationDuration() constant view returns (uint256)',
      'function expireAndRefundFor(address _keyOwner,uint256 amount)',
      'function freeTrialLength() constant view returns (uint256)',
      'function getApproved(uint256 _tokenId) constant view returns (address)',
      'function getBalance(address _tokenAddress,address _account) constant view returns (uint256)',
      'function getCancelAndRefundApprovalHash(address _keyManager,address _txSender) constant view returns (bytes32 approvalHash)',
      'function getCancelAndRefundValueFor(address _keyOwner) constant view returns (uint256 refund)',
      'function getHasValidKey(address _keyOwner) constant view returns (bool)',
      'function getOwnersByPage(uint256 _page,uint256 _pageSize) constant view returns (address[])',
      'function getTokenIdFor(address _account) constant view returns (uint256)',
      'function getTransferFee(address _keyOwner,uint256 _time) constant view returns (uint256)',
      'function grantKeys(address[] _recipients,uint256[] _expirationTimestamps,address[] _keyManagers)',
      'function invalidateOffchainApproval(uint256 _nextAvailableNonce)',
      'function isAlive() constant view returns (bool)',
      'function isApprovedForAll(address _owner,address _operator) constant view returns (bool)',
      'function isKeyGranter(address account) constant view returns (bool)',
      'function isKeyOwner(uint256 _tokenId,address _keyOwner) constant view returns (bool)',
      'function isLockManager(address account) constant view returns (bool)',
      'function keyExpirationTimestampFor(address _keyOwner) constant view returns (uint256)',
      'function keyManagerOf(uint256) constant view returns (address)',
      'function keyManagerToNonce(address) constant view returns (uint256)',
      'function keyPrice() constant view returns (uint256)',
      'function maxNumberOfKeys() constant view returns (uint256)',
      'function name() constant view returns (string)',
      'function numberOfOwners() constant view returns (uint256)',
      'function onKeyCancelHook() constant view returns (address)',
      'function onKeyPurchaseHook() constant view returns (address)',
      'function ownerOf(uint256 _tokenId) constant view returns (address)',
      'function owners(uint256) constant view returns (address)',
      'function publicLockVersion() constant pure returns (uint256)',
      'function purchase(uint256 _value,address _recipient,address _referrer,bytes _data) payable',
      'function purchasePriceFor(address _recipient,address _referrer,bytes _data) constant view returns (uint256 minKeyPrice)',
      'function refundPenaltyBasisPoints() constant view returns (uint256)',
      'function renounceLockManager()',
      'function revokeKeyGranter(address _granter)',
      'function safeTransferFrom(address _from,address _to,uint256 _tokenId)',
      'function safeTransferFrom(address _from,address _to,uint256 _tokenId,bytes _data)',
      'function setApprovalForAll(address _to,bool _approved)',
      'function setBaseTokenURI(string _baseTokenURI)',
      'function setEventHooks(address _onKeyPurchaseHook,address _onKeyCancelHook)',
      'function setKeyManagerOf(uint256 _tokenId,address _keyManager)',
      'function shareKey(address _to,uint256 _tokenId,uint256 _timeShared)',
      'function supportsInterface(bytes4 interfaceId) constant view returns (bool)',
      'function symbol() constant view returns (string)',
      'function tokenAddress() constant view returns (address)',
      'function tokenByIndex(uint256 _index) constant view returns (uint256)',
      'function tokenOfOwnerByIndex(address _keyOwner,uint256 _index) constant view returns (uint256)',
      'function tokenURI(uint256 _tokenId) constant view returns (string)',
      'function totalSupply() constant view returns (uint256)',
      'function transfer(address _to,uint256 _value) returns (bool success)',
      'function transferFeeBasisPoints() constant view returns (uint256)',
      'function transferFrom(address _from,address _recipient,uint256 _tokenId)',
      'function unlockProtocol() constant view returns (address)',
      'function updateBeneficiary(address _beneficiary)',
      'function updateKeyPricing(uint256 _keyPrice,address _tokenAddress)',
      'function updateLockName(string _lockName)',
      'function updateLockSymbol(string _lockSymbol)',
      'function updateRefundPenalty(uint256 _freeTrialLength,uint256 _refundPenaltyBasisPoints)',
      'function updateTransferFee(uint256 _transferFeeBasisPoints)',
      'function withdraw(address _tokenAddress,uint256 _amount)',
      'function initialize(address _lockCreator,uint256 _expirationDuration,address _tokenAddress,uint256 _keyPrice,uint256 _maxNumberOfKeys,string _lockName)',
      'function initialize()',
    ],
    bytecodeHash:
      '0x04782fb9f4650646c8db40744d69e4bf68845d1e7164884afb6ba95eb04e1a41',
  },
  Unlock: {
    contractName: 'Unlock',
    abi: [
      'event ConfigUnlock (address udt,address weth,uint256 estimatedGasForPurchase,string globalTokenSymbol,string globalTokenURI,uint256 chainId)',
      'event NewLock (address indexed lockOwner,address indexed newLockAddress)',
      'event OwnershipTransferred (address indexed previousOwner,address indexed newOwner)',
      'event ResetTrackedValue (uint256 grossNetworkProduct,uint256 totalDiscountGranted)',
      'event SetLockTemplate (address publicLockAddress)',
      'function chainId() constant view returns (uint256)',
      'function estimatedGasForPurchase() constant view returns (uint256)',
      'function globalBaseTokenURI() constant view returns (string)',
      'function globalTokenSymbol() constant view returns (string)',
      'function grossNetworkProduct() constant view returns (uint256)',
      'function isOwner() constant view returns (bool)',
      'function locks(address) constant view returns (bool deployed,uint256 totalSales,uint256 yieldedDiscountTokens)',
      'function owner() constant view returns (address)',
      'function publicLockAddress() constant view returns (address)',
      'function renounceOwnership()',
      'function totalDiscountGranted() constant view returns (uint256)',
      'function transferOwnership(address newOwner)',
      'function udt() constant view returns (address)',
      'function uniswapOracles(address) constant view returns (address)',
      'function weth() constant view returns (address)',
      'function initialize(address _unlockOwner)',
      'function createLock(uint256 _expirationDuration,address _tokenAddress,uint256 _keyPrice,uint256 _maxNumberOfKeys,string _lockName,bytes12 _salt)',
      'function computeAvailableDiscountFor(address,uint256) constant view returns (uint256 discount,uint256 tokens)',
      'function recordKeyPurchase(uint256 _value,address _referrer)',
      'function recordConsumedDiscount(uint256 _discount,uint256)',
      'function unlockVersion() constant pure returns (uint16)',
      'function configUnlock(address _udt,address _weth,uint256 _estimatedGasForPurchase,string _symbol,string _URI,uint256 _chainId)',
      'function setLockTemplate(address _publicLockAddress)',
      'function setOracle(address _tokenAddress,address _oracleAddress)',
      'function resetTrackedValue(uint256 _grossNetworkProduct,uint256 _totalDiscountGranted)',
      'function getGlobalBaseTokenURI() constant view returns (string)',
      'function getGlobalTokenSymbol() constant view returns (string)',
    ],
    bytecodeHash:
      '0xc5ea0fd202dd361f7dcc45b751f2c2d46a796e3a53c7e75dc1c16cf5285b5a8e',
  },
}

export default abis